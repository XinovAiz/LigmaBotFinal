[null,{"name":"LoadServerPrefixes","temp":"","event-type":"1","_id":"LoadSubs","actions":[{"behavior":"1","interpretation":"0","code":"// Make sure it only runs once!!\n//------------\n\nif(!globalVars(\"server_prefixes_loaded\")){ \n  this.callNextAction(cache);\n  this.storeValue(true, 3,\"server_prefixes_loaded\", cache);\n}","storage":"0","varName":"","name":"Run Script"},{"behavior":"0","interpretation":"0","code":"Bot.prefixes = {};\nconsole.log('(Server Prefixes) Initiating Server Prefixes....');\nBot.checkCommand = function(msg) {\n\tconst fs = require(\"fs\");\n\tconst path = require(\"path\");\n\n\ttry {\n\t\tconst defaultTag = Files.data.settings.tag;\n\t\tconst separator = Files.data.settings.separator || '\\\\s+';\n\t\n\t\tlet content = msg.content;\n\t\tlet guild = msg.guild;\n\t\n\t\tcontent = content.split(new RegExp(separator))[0];\n\t\n\t\tconst filePath = path.join(\"data\",\"serverPrefixes.json\");\t\t\n\t\tif(fs.existsSync(filePath)){\n\t\t\tlet saved_prefixes = fs.readFileSync(filePath, \"utf8\");\n\t\t\ttry {\n\t\t\t\tthis.prefixes = JSON.parse(saved_prefixes);\t\t\n\t\t\t} catch(err){}\t\t\t\n\t\t}else{\n\t\t\tthis.prefixes[guild.id] = defaultTag;\n\t\t\tfs.writeFileSync(filePath, JSON.stringify(this.prefixes));\n\t\t}\n\n\t\tlet tag = this.prefixes[guild.id] || defaultTag;\n\n                if(Array.isArray(this.prefixes)){ \n                  console.log(\"Old version serverPrefixes.json detected.  Please remove serverPrefixes.json and restart your bot otherwise setting new prefixes will not work!\")\n                  tag = defaultTag;\n                }\n\n\t\tif(tag){\t\n\t\t\tif(guild) guild.tag = tag;\t\n\n\t\t\tif(content.startsWith(tag)) {\t\t\t\t\n\t\t\t\tlet command = content.substring(tag.length);\n\t\t\t\tif(command) {       \n\t\t\t\t\tif(!Bot._caseSensitive) {\n\t\t\t\t\t\tcommand = command.toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\tconst cmd = Bot.$cmds[command];\n\t\t\t\t\tif(cmd) {\t\t\t\t\t\n\t\t\t\t\t\tActions.preformActions(msg, cmd);\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t}\t\t\t\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n   \n};\nconsole.log('(Server Prefixes) Loaded Function Overwrite: CheckCommand');\n","storage":"0","varName":"","name":"Run Script"}]},{"name":"ActivateCachedOnReaction","temp":"","event-type":"1","_id":"RpJOG","actions":[{"behavior":"1","interpretation":"1","code":"// This script makes sure that it actually only runs once-------\n// put others after this Run Script!\nif(!globalVars(\"cached_reactions\")){\n    this.callNextAction(cache)\n    this.storeValue(\"started!!\", 3, \"cached_reactions\", cache)\n}","storage":"0","varName":"","name":"Run Script"},{"behavior":"1","interpretation":"1","code":"this.getDBM().Bot.bot.on('raw', packet => {\n    // We don't want this to run on unrelated packets\n    if (!['MESSAGE_REACTION_ADD', 'MESSAGE_REACTION_REMOVE'].includes(packet.t)) return;\n    // Grab the channel to check the message from\n    const channel = this.getDBM().Bot.bot.channels.get(packet.d.channel_id);\n    // There's no need to emit if the message is cached, because the event will fire anyway for that\n    if (channel.messages.has(packet.d.message_id)) return;\n    // Since we have confirmed the message is not cached, let's fetch it\n    channel.fetchMessage(packet.d.message_id).then(message => {\n        // Emojis can have identifiers of name:id format, so we have to account for that case as well\n        const emoji = packet.d.emoji.id ? `${packet.d.emoji.name}:${packet.d.emoji.id}` : packet.d.emoji.name;\n        // This gives us the reaction we need to emit the event properly, in top of the message object\n        const reaction = message.reactions.get(emoji);\n        // Check which type of event it is before emitting\n        if (packet.t === 'MESSAGE_REACTION_ADD') {\n            this.getDBM().Bot.bot.emit('messageReactionAdd', reaction, this.getDBM().Bot.bot.users.get(packet.d.user_id));\n        }\n        if (packet.t === 'MESSAGE_REACTION_REMOVE') {\n            this.getDBM().Bot.bot.emit('messageReactionRemove', reaction, this.getDBM().Bot.bot.users.get(packet.d.user_id));\n        }\n    });\n});","storage":"0","varName":"","name":"Run Script"}]},{"name":"Blacklist Check 2","temp":"","event-type":"0","_id":"fgWMk","actions":[{"server":"1","varName":"server","info":"1","storage":"1","varName2":"id","name":"Store Server Info"},{"filename":"./resources/blacklist/${tempVars(\"id\")}.json","storage":"1","varName2":"file","name":"Read File"},{"storage":"1","varName":"file","comparison":"0","value":"","iftrue":"0","iftrueVal":"","iffalse":"3","iffalseVal":"1","name":"Check Variable"},{"server":"1","varName":"server","name":"Leave Server"},{"channel":"5","varName":"IGNORE","message":"This doesnt do anything","storage":"0","varName2":"","name":"Send Message"}]},{"name":"Blacklist Check 1","temp":"","event-type":"4","_id":"bGatY","actions":[{"server":"0","varName":"","info":"1","storage":"1","varName2":"id","name":"Store Server Info"},{"filename":"./resources/blacklist/${tempVars(\"id\")}.json","storage":"1","varName2":"file","name":"Read File"},{"storage":"1","varName":"file","comparison":"0","value":"","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"1","name":"Check Variable"},{"channel":"4","varName":"","message":"Your server is blacklisted. ","storage":"0","varName2":"","name":"Send Message"},{"server":"0","varName":"","name":"Leave Server"}]},{"name":"BotInit","temp":"","event-type":"1","actions":[{"info":"0","find":"290937316338302977","storage":"3","varName":"skyleid","name":"Find Member"},{"info":"0","find":"538763671011065895","storage":"3","varName":"serverligma","name":"Find Server"},{"server":"3","varName":"serverligma","name":"Change Server"},{"info":"0","find":"539192888009949204","storage":"3","varName":"logserror","name":"Find Channel"}],"_id":"DhmfJ"},{"name":"GameCycle","temp":"","event-type":"1","actions":[{"activity":"0","nameText":"\"botprefix\" is a command / \"!!Help\"","url":"","stat":"0","name":"Set Bot Activity"}],"_id":"hMwQB"},{"name":"bot-dm-log","temp":"dm-msg","event-type":"2","actions":[{"behavior":"0","interpretation":"1","code":"tempVars(\"dm-msg\").member == null ? tempVars(\"dm-msg\").channel.recipient.id : \"\"","storage":"1","varName":"id","name":"Run Script"},{"storage":"1","varName":"id","comparison":"0","value":"","iftrue":"0","iftrueVal":"","iffalse":"1","iffalseVal":"","name":"Check Variable"},{"behavior":"0","interpretation":"1","code":"tempVars(\"dm-msg\").content","storage":"1","varName":"msg-content","name":"Run Script"},{"info":"0","find":"538763671011065895","storage":"1","varName":"server","name":"Find Server"},{"server":"1","varName":"server","name":"Change Server"},{"info":"0","find":"539169434053509182","storage":"1","varName":"logchannel","name":"Find Channel"},{"channel":"5","varName":"logchannel","message":"ðŸ’¬ <@${tempVars(\"id\")}> (${tempVars(\"id\")}) :\n\n${tempVars(\"msg-content\")}","storage":"0","varName2":"","name":"Send Message"}],"_id":"zbAXf"},{"name":"Welcome","temp":"member","event-type":"6","_id":"tuZIb","actions":[{"server":"0","varName":"","info":"1","storage":"1","varName2":"server","name":"Store Server Info"},{"filename":"./resources/welcomechannel/${tempVars(\"server\")}.txt","storage":"1","varName2":"file","name":"Read File"},{"storage":"1","varName":"file","comparison":"0","value":"","iftrue":"0","iftrueVal":"","iffalse":"2","iffalseVal":"6","name":"Check Variable"},{"info":"0","find":"${tempVars(\"file\")}","storage":"1","varName":"channelid","name":"Find Channel"},{"channel":"5","varName":"channelid","message":"This is a test","storage":"0","varName2":"","name":"Send Message"},{"name":"End Action Sequence"}]}]